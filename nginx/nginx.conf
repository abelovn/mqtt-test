user  nginx;                                                                                               
worker_processes  auto;                                                                                    
                                                                                                           
error_log  /var/log/nginx/error.log notice;                                                                
pid        /var/run/nginx.pid;                                                                             
                                                                                                           
                                                                                                           
events {                                                                                                   
    worker_connections  1024;                                                                              
}                                                                                                          
                                                                                                           
                                                                                                           
http { 

          map $http_upgrade $connection_upgrade {
       default upgrade;
       '' close;
     }
     
     upstream grafana {
       server grafana:3000;
     }
     
	 
	# upstream influxdb {
	#server influxdb:8086;
	#}

 
	

     

    server {
     listen 80;
     listen 443 ssl;
     server_name server.test;
     ssl_certificate /etc/ssl/certs/server.crt;
     ssl_certificate_key /etc/ssl/private/server.key;
#    ssl on;
#    return 301 https://$host$request_uri;


			
	
	location /grafana/ {
            rewrite  ^/grafana/(.*)  /$1 break;
            proxy_set_header Host $http_host; 
            proxy_pass http://grafana;
if ($ssl_protocol = "") {                                
                                rewrite ^/(.*) https://$server_name/$1 permanent;
}
  }
	
	
	location /grafana/api/live/ {
            rewrite  ^/grafana/(.*)  /$1 break;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $http_host;
            proxy_pass http://grafana;
if ($ssl_protocol = "") {                                
                                rewrite ^/(.*) https://$server_name/$1 permanent;
}
  }
	
	
    location / {
        proxy_set_header HOST $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass_request_headers on;
        proxy_pass http://mqtt:9001;
        proxy_http_version 1.0;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";

if ($ssl_protocol = "") {                                
                                rewrite ^/(.*) https://$server_name/$1 permanent;
}
        }
			

	
	
     }
	

}


