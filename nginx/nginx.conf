user  nginx;                                                                                               
worker_processes  auto;                                                                                    
                                                                                                           
error_log  /var/log/nginx/error.log notice;                                                                
pid        /var/run/nginx.pid;                                                                             
                                                                                                           
                                                                                                           
events {                                                                                                   
    worker_connections  1024;                                                                              
}                                                                                                          
                                                                                                           
                                                                                                           
http { 

          map $http_upgrade $connection_upgrade {
       default upgrade;
       '' close;
     }
     
     upstream grafana {
       server grafana:3000;
     }
     
	 
	# upstream influxdb {
	#server influxdb:8086;
	#}

 
#	 upstream mqtt {
#       server mqtt:9001;
#     }
	

     

    server {
     listen 80;
#    listen 443 ssl;
     server_name localhost;

#    ssl on;
#    ssl_certificate         /etc/nginx/ssl/example.com/server.crt;
#    ssl_certificate_key     /etc/nginx/ssl/example.com/server.key;
#    ssl_trusted_certificate /etc/nginx/ssl/example.com/ca-certs.pem;

#	location /grafana {
#		rewrite /grafana/(.*) /$1  break;
#		proxy_pass http://grafana:3000;

#		proxy_pass http://127.0.0.1:3000;
#		proxy_set_header host $host;
#		proxy_set_header x-real-ip $remote_addr;
#		proxy_set_header x-forwarded-for $proxy_add_x_forwarded_for;
#		proxy_set_header x-forwarded-proto $scheme;
#			}
			
	
	location /grafana/ {
            rewrite  ^/grafana/(.*)  /$1 break;
            proxy_set_header Host $http_host; 
            proxy_pass http://grafana;
  }
	
	
	location /grafana/api/live/ {
            rewrite  ^/grafana/(.*)  /$1 break;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $http_host;
            proxy_pass http://grafana;
  }
	
	
    location / {
        proxy_set_header HOST $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass_request_headers on;
        proxy_pass http://mqtt:9001;
        proxy_http_version 1.0;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        }
			

        location  /influxdb {
  rewrite ^/influxdb/(.*) /$1 break;
  proxy_pass         http://influxdb:8086;
  proxy_redirect     off;
  proxy_set_header   Host $host;
}

#	location /influxdb/ {
#              add_header 'Access-Control-Allow-Origin' '*';
#        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
#              root /influxdb/;
#              proxy_pass http://influxdb/;
#             rewrite  ^/influxdb/(.*)  / break;
#             proxy_pass http://influxdb:8086;
#            proxy_set_header Host $http_host; 
#            proxy_pass http://influxdb;
#  }
	
	
#	location /grafana/api/live/ {
#            rewrite  ^/grafana/(.*)  /$1 break;
#           proxy_http_version 1.1;
#            proxy_set_header Upgrade $http_upgrade;
#            proxy_set_header Connection $connection_upgrade;
#            proxy_set_header Host $http_host;
#            proxy_pass http://grafana;
#  }
     }
	
#	server {
#    listen 80;
#    proxy_pass mqtt;
#    proxy_connect_timeout 1s;
#    health_check match=mqtt_conn;

#    access_log /var/log/nginx/mqtt_access.log mqtt;
#    error_log  /var/log/nginx/mqtt_error.log; # Health check notifications
#}

}


